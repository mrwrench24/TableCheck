{"ast":null,"code":"var _jsxFileName = \"/Users/jakesquatrito/tablecheck/src/context/Waitlist.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WaitlistContext = /*#__PURE__*/createContext();\nfunction Provider({\n  children\n}) {\n  _s();\n  const [waitlist, setWaitlist] = useState([{\n    name: \"Sam\",\n    size: 3,\n    key: 1\n  }, {\n    name: \"Liane\",\n    size: 4,\n    key: 2\n  }]);\n  const valueToShare = {\n    waitlist,\n    deleteParty: targetNumber => {\n      setWaitlist(waitlist.filter(party => party.phoneNumber !== targetNumber));\n    },\n    editParty: (targetNumber, newName) => {\n      setWaitlist(waitlist.map(party => {\n        if (party.phoneNumber === targetNumber) {\n          party.name = newName;\n          return party;\n        } else {\n          return party;\n        }\n      }));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(WaitlistContext.Provider, {\n    value: valueToShare,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(Provider, \"dGCmFpIFok4sxCwxwj8CEhz/vf0=\");\n_c = Provider;\nexport { Provider };\nexport default WaitlistContext;\nvar _c;\n$RefreshReg$(_c, \"Provider\");","map":{"version":3,"names":["createContext","useState","jsxDEV","_jsxDEV","WaitlistContext","Provider","children","_s","waitlist","setWaitlist","name","size","key","valueToShare","deleteParty","targetNumber","filter","party","phoneNumber","editParty","newName","map","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jakesquatrito/tablecheck/src/context/Waitlist.js"],"sourcesContent":["import { createContext, useState } from \"react\";\n\nconst WaitlistContext = createContext();\n\nfunction Provider({ children }) {\n  const [waitlist, setWaitlist] = useState([\n    {\n      name: \"Sam\",\n      size: 3,\n      key: 1,\n    },\n    {\n      name: \"Liane\",\n      size: 4,\n      key: 2,\n    },\n  ]);\n\n  const valueToShare = {\n    waitlist,\n    deleteParty: (targetNumber) => {\n      setWaitlist(\n        waitlist.filter((party) => party.phoneNumber !== targetNumber)\n      );\n    },\n    editParty: (targetNumber, newName) => {\n      setWaitlist(\n        waitlist.map((party) => {\n          if (party.phoneNumber === targetNumber) {\n            party.name = newName;\n            return party;\n          } else {\n            return party;\n          }\n        })\n      );\n    },\n  };\n\n  return (\n    <WaitlistContext.Provider value={valueToShare}>\n      {children}\n    </WaitlistContext.Provider>\n  );\n}\n\nexport { Provider };\nexport default WaitlistContext;\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,eAAe,gBAAGJ,aAAa,CAAC,CAAC;AAEvC,SAASK,QAAQA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC9B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,CACvC;IACES,IAAI,EAAE,KAAK;IACXC,IAAI,EAAE,CAAC;IACPC,GAAG,EAAE;EACP,CAAC,EACD;IACEF,IAAI,EAAE,OAAO;IACbC,IAAI,EAAE,CAAC;IACPC,GAAG,EAAE;EACP,CAAC,CACF,CAAC;EAEF,MAAMC,YAAY,GAAG;IACnBL,QAAQ;IACRM,WAAW,EAAGC,YAAY,IAAK;MAC7BN,WAAW,CACTD,QAAQ,CAACQ,MAAM,CAAEC,KAAK,IAAKA,KAAK,CAACC,WAAW,KAAKH,YAAY,CAC/D,CAAC;IACH,CAAC;IACDI,SAAS,EAAEA,CAACJ,YAAY,EAAEK,OAAO,KAAK;MACpCX,WAAW,CACTD,QAAQ,CAACa,GAAG,CAAEJ,KAAK,IAAK;QACtB,IAAIA,KAAK,CAACC,WAAW,KAAKH,YAAY,EAAE;UACtCE,KAAK,CAACP,IAAI,GAAGU,OAAO;UACpB,OAAOH,KAAK;QACd,CAAC,MAAM;UACL,OAAOA,KAAK;QACd;MACF,CAAC,CACH,CAAC;IACH;EACF,CAAC;EAED,oBACEd,OAAA,CAACC,eAAe,CAACC,QAAQ;IAACiB,KAAK,EAAET,YAAa;IAAAP,QAAA,EAC3CA;EAAQ;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAE/B;AAACnB,EAAA,CAxCQF,QAAQ;AAAAsB,EAAA,GAARtB,QAAQ;AA0CjB,SAASA,QAAQ;AACjB,eAAeD,eAAe;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}